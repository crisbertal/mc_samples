rstudioapi::addTheme('https://raw.githubusercontent.com/johnnybarrels/rstudio-one-dark-pro-theme/master/OneDarkPro.rstheme', apply=TRUE, force=TRUE)
install.packages(raster)
library(raster)
install.packages("raster")
getwd()
library(raster)
roi <- raster("/Users/crisber/Universidad de Co패rdoba/Proyectos - General/tfm_mc/mc_valencia/recorte_roi.tif")
#roi <- raster("/Users/crisber/Universidad de Co패rdoba/Proyectos - General/tfm_mc/mc_valencia/MC_CV_ras/MC_CV_ras.tif")
plot(roi)
roi
r <- ratify(roi)
r
rat <- levels(r)[[1]]
rat
rat <- levels(r)
rat
rat <- levels(r)[]
rat
rat <- levels(r)[[1]]
rat
roi <- ratify(roi)
roi
rat <- levels(r)[[1]]
rat
rat$ID
class(rat$ID)
apply(rat, 1, getVal)
getGval <- function(id) {
if((id >= 1 && id <= 4) || (id >= 201 && id <= 219)) {
return(1)
} else if((id >= 15 && id <= 21) || (id >= 100 && id <= 118)) {
return(4)
} else if(id >= 5 && id <= 10) {
return(2)
} else {
return (3)
}
}
apply(rat, 1, getVal)
lapply(rat, 1, getVal)
lapply(rat, getVal)
lapply(rat, getVal)
lapply(rat, getGval)
result <- lapply(rat, getGval)
result
result <- apply(rat, 1, getGval)
result
result <- c(apply(rat, 1, getGval))
result
class(result)
vector <- c(1,2,3,4,5)
class(vector)
rat&GVAL = result
rat&GVAL <- result
rat$GVAL <- result
View(rat)
rat
levels(roi) <- rat
roi
writeRaster(roi, filename="roi_recorte.tif")
recorte <- raster("roi_recorte.tif")
recorte
reclass_df <- c(1, 4, 1,
201, 219, 1
5, 10, 2
11, 14, 3
15, 21, 4
100, 118, 4)
reclass_df <- c(1, 4, 1,
201, 219, 1,
5, 10, 2,
11, 14, 3,
15, 21, 4,
100, 118, 4)
cosa <- [1,3,4,5,5]
reclass_m <- matrix(reclass_df, ncol = 3, byrow = TRUE)
View(recorte)
View(reclass_m)
View(reclass_m)
roi_classified <- reclassify(roi, reclass_m)
roi_classified
library(raster)
roi <- raster("/Users/crisber/Universidad de Co패rdoba/Proyectos - General/tfm_mc/mc_valencia/recorte_roi.tif")
reclass_df <- c(1, 4, 1,
201, 219, 1,
5, 10, 2,
11, 14, 3,
15, 21, 4,
100, 118, 4)
reclass_m <- matrix(reclass_df, ncol = 3, byrow = TRUE)
roi_classified <- reclassify(roi, reclass_m)
roi_classified
barplot(roi_classified, main = "Number of pixels in each class")
reclass_df <- c(1, 4, 1,
5, 10, 2,
11, 14, 3,
15, 21, 4,
100, 118, 4,
201, 219, 1)
reclass_m <- matrix(reclass_df, ncol = 3, byrow = TRUE)
roi_classified <- reclassify(roi, reclass_m)
barplot(roi_classified, main = "Number of pixels in each class")
reclass_df <- c(1, 4, 1,
4, 11, 2,
11, 14, 3,
14, 21, 4,
100, 118, 4,
201, 219, 1)
reclass_m <- matrix(reclass_df, ncol = 3, byrow = TRUE)
roi_classified <- reclassify(roi, reclass_m)
roi_classified
barplot(roi_classified, main = "Number of pixels in each class")
reclass_df <- c(1, 4, 1,
4, 11, 2,
11, 14, 3,
14, 21, 4,
100, 118, 4,
200, 219, 1)
reclass_m <- matrix(reclass_df, ncol = 3, byrow = TRUE)
roi_classified <- reclassify(roi, reclass_m)
roi_classified
barplot(roi_classified, main = "Number of pixels in each class")
#roi <- raster("/Users/crisber/Universidad de Co패rdoba/Proyectos - General/tfm_mc/mc_valencia/MC_CV_ras/MC_CV_ras.tif")
plot(roi)
reclass_df <- c(1, 4, 1,
4, 11, 2,
11, 14, 3,
14, 21, 4,
100, 118, 4,
200, 219, 1)
barplot(roi_classified, main = "Number of pixels in each class")
reclass_df <- c(1, 4, 1,
4, 10, 2,
10, 14, 3,
14, 21, 4,
100, 118, 4,
201, 219, 1)
reclass_m <- matrix(reclass_df, ncol = 3, byrow = TRUE)
roi_classified <- reclassify(roi, reclass_m)
roi_classified
barplot(roi_classified, main = "Number of pixels in each class")
reclass_df <- c(1, 4, 1,
4, 10, 2,
10, 14, 3,
14, 21, 4,
100, 118, 4,
200, 219, 1)
reclass_m <- matrix(reclass_df, ncol = 3, byrow = TRUE)
roi_classified <- reclassify(roi, reclass_m)
roi_classified
barplot(roi_classified, main = "Number of pixels in each class")
reclass_df <- c(1, 4, 1,
5, 10, 2,
10, 14, 3,
14, 21, 4,
100, 118, 4,
200, 219, 1)
reclass_m <- matrix(reclass_df, ncol = 3, byrow = TRUE)
roi_classified <- reclassify(roi, reclass_m)
roi_classified
barplot(roi_classified, main = "Number of pixels in each class")
reclass_df <- c(1, 4, 1,
5, 10, 2,
11, 14, 3,
15, 21, 4,
100, 118, 4,
200, 219, 1)
reclass_m <- matrix(reclass_df, ncol = 3, byrow = TRUE)
roi_classified <- reclassify(roi, reclass_m)
roi_classified
barplot(roi_classified, main = "Number of pixels in each class")
reclass_df <- c(1, 4, 1,
5, 10, 2,
10, 14, 3,
14, 21, 4,
100, 118, 4,
200, 219, 1)
reclass_m <- matrix(reclass_df, ncol = 3, byrow = TRUE)
roi_classified <- reclassify(roi, reclass_m)
roi_classified
barplot(roi_classified, main = "Number of pixels in each class")
plot(roi_classified, colors = c("red", "green", "cyan", "blue"))
plot(roi_classified, col = c("red", "green", "cyan", "blue"))
reclass_df <- c(0, 4, 1,
4, 10, 2,
10, 14, 3,
14, 21, 4,
100, 118, 4,
200, 219, 1)
reclass_m <- matrix(reclass_df, ncol = 3, byrow = TRUE)
roi_classified <- reclassify(roi, reclass_m)
roi_classified
barplot(roi_classified, main = "Number of pixels in each class")
plot(roi_classified, col = c("red", "green", "cyan", "blue"))
roi_classified
# Se considera filtro de mayoria al aplicar la funcion modal
roi_filtered <- focal(roi_classified, w=matrix(1/25,nrow=5,ncol=5), fun=modal)
plot(roi_filtered)
plot(roi_filtered, col = c("red", "green", "cyan", "blue"))
par(c(1,2))
plot(roi_classified, col = c("red", "green", "cyan", "blue"))
plot(roi_filtered, col = c("red", "green", "cyan", "blue"))
par(mfrow=c(1,2))
plot(roi_classified, col = c("red", "green", "cyan", "blue"))
plot(roi_filtered, col = c("red", "green", "cyan", "blue"))
# Se considera filtro de mayoria al aplicar la funcion modal
roi_filtered <- focal(roi_classified, w=matrix(1,5,5), fun=modal)
plot(roi_classified, col = c("red", "green", "cyan", "blue"))
plot(roi_filtered, col = c("red", "green", "cyan", "blue"))
# Se considera filtro de mayoria al aplicar la funcion modal
roi_filtered <- focal(roi_classified, w=matrix(1,6,6), fun=modal)
# Se considera filtro de mayoria al aplicar la funcion modal
roi_filtered <- focal(roi_classified, w=matrix(1,7,7), fun=modal)
plot(roi_classified, col = c("red", "green", "cyan", "blue"))
plot(roi_filtered, col = c("red", "green", "cyan", "blue"))
roi_filtered_vector <- rasterToPolygons(roi_filtered, dissolve=TRUE)
roi_filtered_vector
install.packages("rgeos")
library(rgeos)
roi_filtered_vector <- rasterToPolygons(roi_filtered, dissolve=TRUE)
roi_filtered_vector
plot(roi_filtered_vector)
install.packages("mapview")
library(mapview)
mapview(roi_filtered_vector)
mapview(roi_filtered)
mapview(roi_filtered, alpha.regions = 0.5)
mapview(roi_filtered, alpha.regions = 0.4)
mapview(roi_classified, alpha.regions = 0.4)
mapview(roi_filtered, alpha.regions = 0.4)
points(spsample(roi_filetered_vector, n = 1000, "regular"), pch = 3)
points(spsample(roi_filtered_vector, n = 1000, "regular"), pch = 3)
points(spsample(roi_filtered_vector, n = 1000, "random"), pch = 3)
roi_samples <- points(spsample(roi_filtered_vector, n = 1000, "random"), pch = 3)
roi_samples <- points(spsample(roi_filtered_vector, n = 1000, "random"), pch = 3)
roi_samples <- spsample(roi_filtered_vector, n = 1000, "random")
roi_samples
points(spsample(roi_filtered_vector@polygons[[1]], n = 100, "stratified"), pch = 3, cex=.5)
roi_filtered_vector@polygons
roi_filtered_vector@data
roi_filtered_vector@polygons[[1]]
plot(roi_filtered_vector@polygons[[1]], border = "blue", col = "#0000FF33")
install.packages("sp")
:w
install.packages("sp")
install.packages("sp")
install.packages("sp")
install.packages("sp")
install.packages("sp")
